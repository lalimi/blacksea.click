#!/usr/bin/env ruby

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π Supabase —á–µ—Ä–µ–∑ REST API
require 'net/http'
require 'json'
require 'uri'

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env.local
env_vars = {}
File.readlines('.env.local').each do |line|
  line.strip!
  next if line.empty? || line.start_with?('#')
  key, value = line.split('=', 2)
  env_vars[key] = value if key && value
end

supabase_url = env_vars['SUPABASE_URL']
service_key = env_vars['SUPABASE_SERVICE_ROLE_KEY']

puts "üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ Supabase REST API..."
puts "URL: #{supabase_url}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
if !service_key || service_key == 'your_service_role_key_here'
  puts "‚ùå SUPABASE_SERVICE_ROLE_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
  puts "   –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –∏–∑ Dashboard -> Settings -> API -> service_role"
  exit 1
end

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL —á–µ—Ä–µ–∑ Edge Functions –∏–ª–∏ RPC
def execute_sql(url, key, sql)
  begin
    # –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ SQL Editor API (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    uri = URI("#{url}/rest/v1/rpc/exec_sql")
    http = Net::HTTP.new(uri.host, uri.port)
    http.use_ssl = true
    
    request = Net::HTTP::Post.new(uri)
    request['apikey'] = key
    request['Authorization'] = "Bearer #{key}"
    request['Content-Type'] = 'application/json'
    request.body = { sql: sql }.to_json
    
    response = http.request(request)
    
    if response.code.to_i == 200
      return { success: true, result: JSON.parse(response.body) }
    else
      return { 
        success: false, 
        error: "HTTP #{response.code}: #{response.body}",
        message: "RPC endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Dashboard SQL Editor"
      }
    end
  rescue => e
    return { 
      success: false, 
      error: e.message,
      message: "–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Dashboard SQL Editor"
    }
  end
end

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π
migration_files = Dir['supabase/migrations/*.sql'].sort

if migration_files.empty?
  puts "‚ùå –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ supabase/migrations/"
  exit 1
end

puts "üìù –ù–∞–π–¥–µ–Ω–æ #{migration_files.length} –º–∏–≥—Ä–∞—Ü–∏–π:"
migration_files.each_with_index do |file, index|
  puts "   #{index + 1}. #{File.basename(file)}"
end

# –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π
puts "\nüîß –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ API..."

migration_files.each_with_index do |file, index|
  filename = File.basename(file)
  puts "\nüìã –ú–∏–≥—Ä–∞—Ü–∏—è #{index + 1}/#{migration_files.length}: #{filename}"
  
  sql_content = File.read(file)
  
  # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–ø–æ ';')
  commands = sql_content.split(';').map(&:strip).reject(&:empty?)
  
  puts "   –ö–æ–º–∞–Ω–¥ SQL: #{commands.length}"
  
  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
  dangerous_keywords = %w[DROP\ DATABASE DELETE\ FROM TRUNCATE]
  has_dangerous = commands.any? { |cmd| dangerous_keywords.any? { |keyword| cmd.upcase.include?(keyword) } }
  
  if has_dangerous
    puts "   ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ"
    next
  end
  
  # –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ API
  result = execute_sql(supabase_url, service_key, sql_content)
  
  if result[:success]
    puts "   ‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
  else
    puts "   ‚ùå –û—à–∏–±–∫–∞: #{result[:message]}"
  end
end

puts "\n" + "="*60
puts "üìã –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:"
puts

puts "‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑ API –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ."
puts "   –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ Supabase –ø—Ä–æ–µ–∫—Ç–æ–≤ —Ç—Ä–µ–±—É—é—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π —á–µ—Ä–µ–∑:"

puts "\nüéØ –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –°–ü–û–°–û–ë–´:"
puts
puts "1. üìä Dashboard SQL Editor (—Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π):"
puts "   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ https://supabase.com/dashboard"
puts "   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø—Ä–æ–µ–∫—Ç qewjnagvsbnwgamrrrwg"
puts "   ‚Ä¢ SQL Editor ‚Üí New Query"
puts "   ‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞:"

migration_files.each_with_index do |file, index|
  filename = File.basename(file)
  puts "     #{index + 1}. #{filename}"
end

puts "\n2. üîß Supabase CLI (–µ—Å–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø):"
puts "   ‚Ä¢ supabase login"
puts "   ‚Ä¢ supabase link --project-ref qewjnagvsbnwgamrrrwg"
puts "   ‚Ä¢ supabase db push"

puts "\n3. üöÄ –ü—Ä—è–º–æ–µ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç–µ IP):"
puts "   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ IP #{`curl -s https://ipinfo.io/ip`.strip} –≤ Allow List"
puts "   ‚Ä¢ ./bin/db_migrate_to_supabase.sh"

puts "\nüí° –ü–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π:"
puts "   ruby test_supabase_client.rb  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Ç–∞–±–ª–∏—Ü"