#!/usr/bin/env ruby

puts "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–†–Ø–î–ö–ê –ú–ò–ì–†–ê–¶–ò–ò"
puts "–ü—Ä–æ–±–ª–µ–º–∞: –∏–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫"
puts "=" * 60

schema_content = File.read('local_schema.sql')

# –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ —Ç–∏–ø–∞–º –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ
sequences = []
tables = []
indexes = []
alters = []
constraints = []

# –ü–∞—Ä—Å–∏–º —Ñ–∞–π–ª –ø–æ—Å—Ç—Ä–æ—á–Ω–æ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Ä–∞–∑–±–æ—Ä–∞
current_command = ""
in_create_table = false

schema_content.each_line do |line|
  line = line.strip
  next if line.empty? || line.start_with?('--')
  
  # –ù–∞–∫–∞–ø–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–º–∞–Ω–¥—É
  current_command += line + "\n"
  
  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
  if line.end_with?(';')
    command = current_command.strip
    
    case command
    when /^CREATE SEQUENCE/i
      sequences << command
    when /^CREATE TABLE/i
      tables << command
    when /^CREATE[^;]*INDEX/i
      indexes << command
    when /^ALTER TABLE.*ADD CONSTRAINT.*FOREIGN KEY/i
      constraints << command
    when /^ALTER TABLE/i
      alters << command
    end
    
    current_command = ""
  end
end

puts "üìä –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø–æ —Ç–∏–ø–∞–º:"
puts "   Sequences: #{sequences.length}"
puts "   Tables: #{tables.length}"  
puts "   Alters: #{alters.length}"
puts "   Indexes: #{indexes.length}"
puts "   Constraints: #{constraints.length}"

# –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º
output_file = 'supabase_fixed_migration.sql'
File.open(output_file, 'w') do |f|
  f.puts "-- –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ú–ò–ì–†–ê–¶–ò–Ø GUMROAD –í SUPABASE"
  f.puts "-- –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫: Tables ‚Üí Alters ‚Üí Indexes ‚Üí Constraints"
  f.puts "-- –°–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: #{Time.now}"
  f.puts ""
  f.puts "SET client_min_messages TO WARNING;"
  f.puts ""
  
  f.puts "-- =================================="
  f.puts "-- –≠–¢–ê–ü 1: –°–û–ó–î–ê–ù–ò–ï SEQUENCES"
  f.puts "-- =================================="
  sequences.each_with_index do |seq, index|
    seq_name = seq.match(/CREATE SEQUENCE\s+(?:public\.)?(\w+)/i)&.captures&.first
    
    if seq_name
      f.puts "-- Sequence #{index + 1}/#{sequences.length}: #{seq_name}"
      f.puts "DO $$ BEGIN"
      f.puts "    IF NOT EXISTS (SELECT 1 FROM pg_sequences WHERE sequencename = '#{seq_name}') THEN"
      f.puts "        EXECUTE '#{seq.gsub("'", "''")}';"
      f.puts "    END IF;"
      f.puts "END $$;"
      f.puts ""
    end
  end
  
  f.puts "-- =================================="
  f.puts "-- –≠–¢–ê–ü 2: –°–û–ó–î–ê–ù–ò–ï –ë–ê–ó–û–í–´–• –¢–ê–ë–õ–ò–¶"
  f.puts "-- =================================="
  tables.each_with_index do |table, index|
    table_name = table.match(/CREATE TABLE\s+(?:public\.)?(\w+)/i)&.captures&.first
    
    if table_name
      f.puts "-- –¢–∞–±–ª–∏—Ü–∞ #{index + 1}/#{tables.length}: #{table_name}"
      f.puts "DO $$ BEGIN"
      f.puts "    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = '#{table_name}' AND table_schema = 'public') THEN"
      f.puts "        EXECUTE '#{table.gsub("'", "''")}';"
      f.puts "    END IF;"
      f.puts "EXCEPTION WHEN others THEN"
      f.puts "    RAISE NOTICE '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã #{table_name}: %', SQLERRM;"
      f.puts "END $$;"
      f.puts ""
    end
  end
  
  f.puts "-- =================================="
  f.puts "-- –≠–¢–ê–ü 3: –î–û–ë–ê–í–õ–ï–ù–ò–ï –ö–û–õ–û–ù–û–ö (ALTER TABLE)"
  f.puts "-- =================================="
  alters.each_with_index do |alter, index|
    f.puts "-- Alter #{index + 1}/#{alters.length}"
    f.puts "DO $$ BEGIN"
    f.puts "    EXECUTE '#{alter.gsub("'", "''")}';"
    f.puts "EXCEPTION"
    f.puts "    WHEN duplicate_column THEN NULL; -- –ö–æ–ª–æ–Ω–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    f.puts "    WHEN duplicate_object THEN NULL; -- –û–±—ä–µ–∫—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    f.puts "    WHEN others THEN"
    f.puts "        RAISE NOTICE '–û—à–∏–±–∫–∞ ALTER: %', SQLERRM;"
    f.puts "END $$;"
    f.puts ""
  end
  
  f.puts "-- =================================="
  f.puts "-- –≠–¢–ê–ü 4: –°–û–ó–î–ê–ù–ò–ï –ò–ù–î–ï–ö–°–û–í (–ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–ª–æ–Ω–æ–∫)"
  f.puts "-- =================================="
  indexes.each_with_index do |index_cmd, index|
    index_name = index_cmd.match(/CREATE[^;]*INDEX\s+(?:CONCURRENTLY\s+)?(?:IF NOT EXISTS\s+)?(\w+)/i)&.captures&.first
    
    if index_name
      f.puts "-- –ò–Ω–¥–µ–∫—Å #{index + 1}/#{indexes.length}: #{index_name}"
      f.puts "DO $$ BEGIN"
      f.puts "    IF NOT EXISTS (SELECT 1 FROM pg_indexes WHERE indexname = '#{index_name}') THEN"
      f.puts "        EXECUTE '#{index_cmd.gsub("'", "''")}';"
      f.puts "    END IF;"
      f.puts "EXCEPTION"
      f.puts "    WHEN duplicate_table THEN NULL; -- –ò–Ω–¥–µ–∫—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
      f.puts "    WHEN undefined_column THEN"
      f.puts "        RAISE NOTICE '–ö–æ–ª–æ–Ω–∫–∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ #{index_name} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç';"
      f.puts "    WHEN others THEN"
      f.puts "        RAISE NOTICE '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ #{index_name}: %', SQLERRM;"
      f.puts "END $$;"
      f.puts ""
    end
  end
  
  f.puts "-- =================================="
  f.puts "-- –≠–¢–ê–ü 5: –î–û–ë–ê–í–õ–ï–ù–ò–ï –í–ù–ï–®–ù–ò–• –ö–õ–Æ–ß–ï–ô"
  f.puts "-- =================================="
  constraints.each_with_index do |constraint, index|
    f.puts "-- Constraint #{index + 1}/#{constraints.length}"
    f.puts "DO $$ BEGIN"
    f.puts "    EXECUTE '#{constraint.gsub("'", "''")}';"
    f.puts "EXCEPTION"
    f.puts "    WHEN duplicate_object THEN NULL; -- Constraint —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    f.puts "    WHEN others THEN"
    f.puts "        RAISE NOTICE '–û—à–∏–±–∫–∞ constraint: %', SQLERRM;"
    f.puts "END $$;"
    f.puts ""
  end
  
  f.puts "-- =================================="
  f.puts "-- –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í"
  f.puts "-- =================================="
  f.puts "SELECT '–¢–∞–±–ª–∏—Ü —Å–æ–∑–¥–∞–Ω–æ:' as type, count(*) as count FROM information_schema.tables WHERE table_schema = 'public';"
  f.puts "SELECT '–ò–Ω–¥–µ–∫—Å–æ–≤ —Å–æ–∑–¥–∞–Ω–æ:' as type, count(*) as count FROM pg_indexes WHERE schemaname = 'public';"
  f.puts "SELECT 'Sequences —Å–æ–∑–¥–∞–Ω–æ:' as type, count(*) as count FROM pg_sequences WHERE schemaname = 'public';"
  f.puts ""
  f.puts "-- –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê"
end

puts "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–Ω: #{output_file}"
puts "üìè –†–∞–∑–º–µ—Ä: #{File.size(output_file) / 1024}KB"

puts "\nüéØ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:"
puts "‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫: Tables ‚Üí Alters ‚Üí Indexes ‚Üí Constraints"  
puts "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ undefined_column –¥–ª—è –∏–Ω–¥–µ–∫—Å–æ–≤"
puts "‚úÖ –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫"

puts "\nüìã –¢–ï–ü–ï–†–¨ –í–´–ü–û–õ–ù–ò–¢–ï –≠–¢–û–¢ –§–ê–ô–õ –í SUPABASE:"
puts "   #{output_file}"