#!/usr/bin/env ruby

require_relative 'config/environment'

puts "üîÑ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Rails ActiveRecord..."

output_file = 'supabase_data_rails.sql'

File.open(output_file, 'w') do |f|
  f.puts "-- –≠–ö–°–ü–û–†–¢ –î–ê–ù–ù–´–• GUMROAD –ß–ï–†–ï–ó RAILS"
  f.puts "-- –°–æ–∑–¥–∞–Ω: #{Time.now}"
  f.puts ""
  f.puts "-- –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞"
  f.puts "SET session_replication_role = replica;"
  f.puts ""

  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –º–æ–¥–µ–ª–∏ Rails
  models_to_export = []
  
  # –ò—â–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –º–æ–¥–µ–ª–µ–π
  Dir.glob("app/models/*.rb").each do |file|
    model_name = File.basename(file, '.rb').camelize
    
    begin
      model_class = model_name.constantize
      if model_class.is_a?(Class) && model_class < ActiveRecord::Base
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ
        count = model_class.count rescue 0
        if count > 0
          models_to_export << { model: model_class, name: model_name, count: count }
        end
      end
    rescue => e
      # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
    end
  end

  puts "üìä –ù–∞–π–¥–µ–Ω–æ –º–æ–¥–µ–ª–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏: #{models_to_export.length}"
  
  models_to_export.sort_by { |m| m[:name] }.each do |model_info|
    model_class = model_info[:model]
    model_name = model_info[:name]
    count = model_info[:count]
    
    puts "üìã –≠–∫—Å–ø–æ—Ä—Ç #{model_name} (#{count} –∑–∞–ø–∏—Å–µ–π)..."
    
    f.puts "-- ==============================================="
    f.puts "-- #{model_name.upcase} (#{count} –∑–∞–ø–∏—Å–µ–π)"
    f.puts "-- ==============================================="
    
    begin
      # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
      table_name = model_class.table_name
      
      # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
      records = model_class.all
      
      records.each_with_index do |record, index|
        # –ü–æ–ª—É—á–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã –∑–∞–ø–∏—Å–∏
        attributes = record.attributes
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è
        columns = attributes.keys
        values = attributes.values.map do |value|
          case value
          when nil
            'NULL'
          when String
            "'#{value.gsub("'", "''")}'"  # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏
          when Time, DateTime
            "'#{value.strftime('%Y-%m-%d %H:%M:%S')}'"
          when Date
            "'#{value.strftime('%Y-%m-%d')}'"
          when TrueClass, FalseClass
            value.to_s
          when Numeric
            value.to_s
          else
            "'#{value.to_s.gsub("'", "''")}'"
          end
        end
        
        f.puts "INSERT INTO #{table_name} (#{columns.join(', ')}) VALUES (#{values.join(', ')});"
      end
      
      f.puts ""
      
    rescue => e
      puts "‚ö†Ô∏è  –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ #{model_name}: #{e.message}"
      f.puts "-- –û–®–ò–ë–ö–ê –≠–ö–°–ü–û–†–¢–ê #{model_name}: #{e.message}"
      f.puts ""
    end
  end

  f.puts "-- –í–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ"
  f.puts "SET session_replication_role = DEFAULT;"
  f.puts ""
  f.puts "-- –≠–ö–°–ü–û–†–¢ –î–ê–ù–ù–´–• –ó–ê–í–ï–†–®–ï–ù"
end

puts "‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω: #{output_file}"
puts "üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: #{File.size(output_file)} –±–∞–π—Ç"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
puts "\nüìã –ü–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞:"
File.open(output_file, 'r') do |f|
  10.times do
    line = f.gets
    break unless line
    puts "   #{line.chomp}"
  end
end