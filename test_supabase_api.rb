#!/usr/bin/env ruby

# –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase —á–µ—Ä–µ–∑ REST API
require 'net/http'
require 'json'
require 'uri'

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env.local
env_vars = {}
File.readlines('.env.local').each do |line|
  line.strip!
  next if line.empty? || line.start_with?('#')
  key, value = line.split('=', 2)
  env_vars[key] = value if key && value
end

supabase_url = env_vars['SUPABASE_URL']
anon_key = env_vars['SUPABASE_ANON_KEY']

puts "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Supabase REST API..."
puts "URL: #{supabase_url}"
puts "Key: #{anon_key[0..20]}..."

# –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Supabase
begin
  uri = URI("#{supabase_url}/rest/v1/")
  http = Net::HTTP.new(uri.host, uri.port)
  http.use_ssl = true
  
  request = Net::HTTP::Get.new(uri)
  request['apikey'] = anon_key
  request['Authorization'] = "Bearer #{anon_key}"
  
  response = http.request(request)
  
  puts "\n‚úÖ REST API –¥–æ—Å—Ç—É–ø–µ–Ω (#{response.code})"
  
  # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  auth_uri = URI("#{supabase_url}/auth/v1/user")
  auth_request = Net::HTTP::Get.new(auth_uri)
  auth_request['apikey'] = anon_key
  auth_request['Authorization'] = "Bearer #{anon_key}"
  
  auth_response = http.request(auth_request)
  puts "‚úÖ Auth API –¥–æ—Å—Ç—É–ø–µ–Ω (#{auth_response.code})"
  
  # –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —á–µ—Ä–µ–∑ SQL
  rpc_uri = URI("#{supabase_url}/rest/v1/rpc/")
  puts "‚úÖ Supabase API –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω"
  
  puts "\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:"
  puts "   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Supabase —á–µ—Ä–µ–∑ REST API –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
  puts "   –≠—Ç–æ –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ –¥–ª—è production —Å—Ä–µ–¥—ã"

rescue => e
  puts "\n‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ REST API: #{e.message}"
  puts "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SUPABASE_URL –∏ SUPABASE_ANON_KEY"
end