#!/usr/bin/env ruby

require_relative 'config/environment'

puts "üîÑ –ü–†–û–°–¢–û–ô –ò–ú–ü–û–†–¢ –î–ê–ù–ù–´–• –ë–ï–ó –°–õ–û–ñ–ù–´–• –ü–†–û–í–ï–†–û–ö"
puts "=" * 60

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î
tables_with_data = []

Dir.glob("app/models/*.rb").each do |file|
  model_name = File.basename(file, '.rb').camelize
  
  begin
    model_class = model_name.constantize
    if model_class.is_a?(Class) && model_class < ActiveRecord::Base
      count = model_class.count rescue 0
      if count > 0
        tables_with_data << {
          model: model_class,
          name: model_name,
          count: count,
          table_name: model_class.table_name
        }
      end
    end
  rescue => e
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
  end
end

puts "üìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü —Å –¥–∞–Ω–Ω—ã–º–∏: #{tables_with_data.length}"

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π SQL —Ñ–∞–π–ª
output_file = 'supabase_simple_data.sql'

File.open(output_file, 'w') do |f|
  f.puts "-- –ü–†–û–°–¢–û–ô –ò–ú–ü–û–†–¢ –î–ê–ù–ù–´–• –í SUPABASE"
  f.puts "-- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –±–∞–∑–æ–≤—ã–µ INSERT —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤"
  f.puts "-- –°–æ–∑–¥–∞–Ω: #{Time.now}"
  f.puts ""
  f.puts "SET session_replication_role = replica;"
  f.puts "SET client_min_messages TO WARNING;"
  f.puts ""
  
  # –°–Ω–∞—á–∞–ª–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã
  priority_tables = %w[users affiliates links]
  
  priority_tables.each do |priority_table|
    table_data = tables_with_data.find { |t| t[:table_name] == priority_table }
    next unless table_data
    
    model_class = table_data[:model]
    table_name = table_data[:table_name]
    count = table_data[:count]
    
    puts "üìã –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞: #{table_name} (#{count} –∑–∞–ø–∏—Å–µ–π)"
    
    f.puts "-- ========================================"
    f.puts "-- #{table_name.upcase} (#{count} –∑–∞–ø–∏—Å–µ–π) - –ü–†–ò–û–†–ò–¢–ï–¢–ù–ê–Ø"
    f.puts "-- ========================================"
    
    begin
      records = model_class.all.limit(50) # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
      
      records.each do |record|
        attributes = record.attributes
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
        filtered_attributes = attributes.reject do |key, value|
          %w[active_test_path_assignments stripe_fee_cents].include?(key)
        end
        
        columns = filtered_attributes.keys
        values = filtered_attributes.values.map do |value|
          case value
          when nil
            'NULL'
          when String
            # –ü—Ä–æ—Å—Ç–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
            escaped = value.gsub("'", "''").gsub("\\", "\\\\")
            "'#{escaped}'"
          when Time, DateTime
            "'#{value.strftime('%Y-%m-%d %H:%M:%S')}'"
          when Date
            "'#{value.strftime('%Y-%m-%d')}'"
          when TrueClass, FalseClass
            value.to_s
          when Numeric
            value.to_s
          when Hash, Array
            # –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ JSON
            "'{}'"
          else
            "'#{value.to_s.gsub("'", "''")}'"
          end
        end
        
        # –ü—Ä–æ—Å—Ç–∞—è INSERT –∫–æ–º–∞–Ω–¥–∞
        f.puts "INSERT INTO #{table_name} (#{columns.join(', ')}) "
        f.puts "VALUES (#{values.join(', ')}) "
        f.puts "ON CONFLICT DO NOTHING;"
      end
      
      f.puts ""
      
    rescue => e
      puts "‚ö†Ô∏è  –û—à–∏–±–∫–∞ #{table_name}: #{e.message}"
      f.puts "-- –û–®–ò–ë–ö–ê #{table_name}: #{e.message}"
      f.puts ""
    end
  end
  
  # –ó–∞—Ç–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
  remaining_tables = tables_with_data.reject { |t| priority_tables.include?(t[:table_name]) }
  
  remaining_tables.each do |table_data|
    model_class = table_data[:model]
    table_name = table_data[:table_name]
    count = table_data[:count]
    
    puts "üìã –û–±—ã—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞: #{table_name} (#{count} –∑–∞–ø–∏—Å–µ–π)"
    
    f.puts "-- ========================================"
    f.puts "-- #{table_name.upcase} (#{count} –∑–∞–ø–∏—Å–µ–π)"
    f.puts "-- ========================================"
    
    begin
      records = model_class.all.limit(20) # –ú–µ–Ω—å—à–∏–π –ª–∏–º–∏—Ç –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
      
      records.each do |record|
        attributes = record.attributes
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
        filtered_attributes = attributes.reject do |key, value|
          %w[active_test_path_assignments stripe_fee_cents].include?(key)
        end
        
        columns = filtered_attributes.keys
        values = filtered_attributes.values.map do |value|
          case value
          when nil
            'NULL'
          when String
            escaped = value.gsub("'", "''").gsub("\\", "\\\\")
            "'#{escaped}'"
          when Time, DateTime
            "'#{value.strftime('%Y-%m-%d %H:%M:%S')}'"
          when Date
            "'#{value.strftime('%Y-%m-%d')}'"
          when TrueClass, FalseClass
            value.to_s
          when Numeric
            value.to_s
          when Hash, Array
            "'{}'"
          else
            "'#{value.to_s.gsub("'", "''")}'"
          end
        end
        
        f.puts "INSERT INTO #{table_name} (#{columns.join(', ')}) "
        f.puts "VALUES (#{values.join(', ')}) "
        f.puts "ON CONFLICT DO NOTHING;"
      end
      
      f.puts ""
      
    rescue => e
      puts "‚ö†Ô∏è  –û—à–∏–±–∫–∞ #{table_name}: #{e.message}"
      f.puts "-- –û–®–ò–ë–ö–ê #{table_name}: #{e.message}"
      f.puts ""
    end
  end
  
  f.puts "SET session_replication_role = DEFAULT;"
  f.puts ""
  f.puts "-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
  f.puts "SELECT 'users' as table, count(*) as records FROM users;"
  f.puts "SELECT 'links' as table, count(*) as records FROM links;"
  f.puts "SELECT 'affiliates' as table, count(*) as records FROM affiliates;"
  f.puts ""
  f.puts "-- –ü–†–û–°–¢–û–ô –ò–ú–ü–û–†–¢ –ó–ê–í–ï–†–®–ï–ù"
end

puts "‚úÖ –ü—Ä–æ—Å—Ç–æ–π –∏–º–ø–æ—Ä—Ç —Å–æ–∑–¥–∞–Ω: #{output_file}"
puts "üìè –†–∞–∑–º–µ—Ä: #{File.size(output_file) / 1024}KB"

puts "\nüéØ –û–°–û–ë–ï–ù–ù–û–°–¢–ò:"
puts "‚úÖ –ü—Ä–æ—Å—Ç—ã–µ INSERT –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏"
puts "‚úÖ ON CONFLICT DO NOTHING –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫"
puts "‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è –≤–∞–∂–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü (users, links, affiliates)"
puts "‚úÖ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫"
puts "‚úÖ –õ–∏–º–∏—Ç—ã –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π"

puts "\nüìã –í–´–ü–û–õ–ù–ò–¢–ï –í SUPABASE:"
puts "   #{output_file}"